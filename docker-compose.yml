version: '3'

networks:
  monitoring:
    external: true
    name: monitoring

services:
  # Postgres
  postgres:
    image: postgres:15.3
    restart: always
    environment: 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5438:5432'
    volumes:
      - /data/postgres_data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./setup/init.sql:/docker-entrypoint-initdb.d/init.sql
    user: 1000:1000 # only uncomment after the database is created, with the correct uid:gid
    networks:
      - monitoring

  # Fetcher
  livetrack-fetcher:
    image: fahy.xyz/livetrack:v1.0.0
    environment:
      - PORT=9101
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - METRICS_SUBSYSTEM=fetcher
    command: /livetrack fetcher
    ports:
      - 9101:9101
    networks:
      - monitoring
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=9101"
    restart: unless-stopped

  # Backend
  livetrack-backend:
    image: fahy.xyz/livetrack:v1.0.1
    environment:
      - PORT=8080
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - METRICS_SUBSYSTEM=backend
    command: /livetrack web
    ports:
      - 8080:8080
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=8080"
    restart: unless-stopped

  # Livetrack test
  #livetrack-test:
  #  image: fahy.xyz/livetrack:v1.0.0
  #  environment:
  #    - PORT=9102
  #    - POSTGRES_HOST=postgres
  #    - POSTGRES_USER=${POSTGRES_USER}
  #    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #    - ORGANIZATION=alpsfreeride
  #    - TELEGRAM_CHANNEL=@test_tracking_go
  #    - TELEGRAM_TOKEN=${TELEGRAM_TOKEN_TEST_TRACKING_GO}
  #    - METRICS_SUBSYSTEM=bot
  #  command: /livetrack bot
  #  ports:
  #    - 9102:9102
  #  networks:
  #    - monitoring
  #  labels:
  #    - "prometheus.io/scrape=true"
  #    - "prometheus.io/port=9102"
  #    - "prometheus.io/extra-labels=livetrack:@test_tracking_go"
  #  restart: unless-stopped

  # Alpsfreeride
  livetrack-alpsfreeride:
    image: fahy.xyz/livetrack:v1.0.0
    environment:
      - PORT=9103
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ORGANIZATION=alpsfreeride
      - TELEGRAM_CHANNEL=@alpsfreeride_tracking
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - METRICS_SUBSYSTEM=bot
    command: /livetrack bot
    ports:
      - 9103:9103
    networks:
      - monitoring
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=9103"
      - "prometheus.io/extra-labels=livetrack:@alpsfreeride"
    restart: unless-stopped

  # Axlair
  livetrack-axlair:
    image: fahy.xyz/livetrack:v1.0.0
    environment:
      - PORT=9104
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ORGANIZATION=axlair
      - TELEGRAM_CHANNEL=@axlair_tracking
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - METRICS_SUBSYSTEM=bot
    command: /livetrack bot
    ports:
      - 9104:9104
    networks:
      - monitoring
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=9104"
      - "prometheus.io/extra-labels=livetrack:@axlair"
    restart: unless-stopped

  # Followus
  livetrack-followus:
    image: fahy.xyz/livetrack:v1.0.0
    environment:
      - PORT=9105
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ORGANIZATION=followus
      - TELEGRAM_CHANNEL=@FollowUsIfYouCan_channel
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - METRICS_SUBSYSTEM=bot
    command: /livetrack bot
    ports:
      - 9105:9105
    networks:
      - monitoring
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=9105"
      - "prometheus.io/extra-labels=livetrack:@followus"
    restart: unless-stopped
